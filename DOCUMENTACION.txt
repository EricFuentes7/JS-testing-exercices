Para cargar un ID (elemento) del HTML hay que marcar un ID en la etiqueta y luego en el JS usar:
document.getElementById("NOMBRE_ID");

se puede almacenar en un string (let), como:
let VARIABLE = document.getElementById("NOMBRE_ID");

Luego, despues de haber declarado una variable como el elemento que es, podriamos por ejemplo, cambiarle el texto:
VARIABLE.innerHTML = "TEXTO";

Eso lo que hace es cambiar el texto del que tenía a TEXTO.

Pero... Para que sirve que se cambie automáticamente? Pues para que cada X tiempo cambie, por ejemplo.
También se puede hacer que al hacer una accion cambie, como:

VARIABLE_BOTON.addEventListener("click", function() {
    VARIABLE.innerHTML = "TEXTO";
});

Esto lo que hace es que cuando se activa la funcion "click" en la variable del botón, se cambia el texto.

Muy bien todo pero... Lo que suele importar más es la modificación de estilos.
Por eso, para cambiar estilos lo que haremos será usar:
ELEMENTO.style.ESTILO = VALOR;

Por ejemplo:
ELEMENTO.style.display = "none";

Esto lo que hace es hacer invisible el elemento.

Ahora otra cosa important que hay que saber es el como leer entradas, por ejemplo de un input text.
Por ejemplo, queremos leer la entrada de un input y escribir un mensaje con esa, lo que podríamos hacer es crear una variable con el valor ingresado:

let ENTRADA = VAR_INPUT.value;

Esto lo agregariamos dentro del:

VARIABLE_BOTON.addEventListener("click", function() {
});

y hariamos que si el value !== "" (no está vacio), se muestre un texto, si no, no.
Como por ejemplo un <p>:

VAR_PARAGRAFO.textContent = "TEXTO"

Que es para modificar el texto de un paragrafo.

En vez de cambiar el estil ode un elemento, que es algo sucio, lo que podemos hacer es asignarle una clase con ese estilo.
Eso lo haremos con:
ELEMENTO.classList.add("CLASE");
ELEMENTO.classList.remove("CLASE");

Esos dos son para añadir y para eliminar clases de un elemento.

Podemos hacer que se vaya cambiando (si está con la clase se quite y si no se ponga) automáticamente con:
ELEMENTO.classList.toggle("CLASE");

Cuando leemos el value de un input, a veces tiene espacios sin querer.
Para quitarlos usamos:

.value.trim()

Eso elimina espacios al principio y al final.
Los inputs siempre dan texto, aunque pongas un número.
Para convertirlo a número usamos:

.parseInt(VALOR)

Si alguien pone letras en vez de número, parseInt da NaN (Not a Number).
Para saber si es inválido, usamos:

.isNaN(VARIABLE)

Si da true, no es un número.
Si queremos parar la función y que no siga, usamos:
return;

Por ejemplo, usamos primero el trim para el valor, luego lo convetimos con .parseInt(VALOR) y para finalizar hacemos un if de si es NaN